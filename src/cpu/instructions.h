#ifndef INSTRUCTIONS_H
#define INSTRUCTIONS_H

#include "../types.h"
#include "cpu.h"

#define INST(i, mne, han, a, eb)  \
  instructions[i].mnemonic = mne; \
  instructions[i].handler = han;  \
  instructions[i].am = a;         \
  instructions[i].extraBytes = eb;

#define INSTRUCTION_LDA_A 0xAD
#define INSTRUCTION_LDA_A_X 0xBD
#define INSTRUCTION_LDA_A_Y 0xB9
#define INSTRUCTION_LDA_IMM 0xA9
#define INSTRUCTION_LDA_ZP 0xA5
#define INSTRUCTION_LDA_IND_ZP_X 0xA1
#define INSTRUCTION_LDA_ZP_X 0xB5
#define INSTRUCTION_LDA_IND_ZP_Y 0xB1

#define INSTRUCTION_LDX_A 0xAE
#define INSTRUCTION_LDX_A_Y 0xBE
#define INSTRUCTION_LDX_IMM 0xA2
#define INSTRUCTION_LDX_ZP 0xA6
#define INSTRUCTION_LDX_ZP_Y 0xB6

#define INSTRUCTION_LDY_A 0xAC
#define INSTRUCTION_LDY_A_Y 0xBC
#define INSTRUCTION_LDY_IMM 0xA0
#define INSTRUCTION_LDY_ZP 0xA4
#define INSTRUCTION_LDY_ZP_X 0xB4

#define INSTRUCTION_STA_A 0x8D
#define INSTRUCTION_STA_A_X 0x9D
#define INSTRUCTION_STA_A_Y 0x99
#define INSTRUCTION_STA_ZP 0x85
#define INSTRUCTION_STA_IND_ZP_X 0x81
#define INSTRUCTION_STA_ZP_X 0x95
#define INSTRUCTION_STA_IND_ZP_Y 0x91

#define INSTRUCTION_STX_A 0x8E
#define INSTRUCTION_STX_ZP 0x86
#define INSTRUCTION_STX_ZP_Y 0x96

#define INSTRUCTION_STY_A 0x8C
#define INSTRUCTION_STY_ZP 0x84
#define INSTRUCTION_STY_ZP_X 0x94

#define INSTRUCTION_ADC_A 0x6D
#define INSTRUCTION_ADC_A_X 0x7D
#define INSTRUCTION_ADC_A_Y 0x79
#define INSTRUCTION_ADC_IMM 0x69
#define INSTRUCTION_ADC_ZP 0x65
#define INSTRUCTION_ADC_IND_ZP_X 0x61
#define INSTRUCTION_ADC_ZP_X 0x75
#define INSTRUCTION_ADC_IND_ZP_Y 0x71

#define INSTRUCTION_SBC_A 0xED
#define INSTRUCTION_SBC_A_X 0xFD
#define INSTRUCTION_SBC_A_Y 0xF9
#define INSTRUCTION_SBC_IMM 0xE9
#define INSTRUCTION_SBC_ZP 0xE5
#define INSTRUCTION_SBC_IND_ZP_X 0xE1
#define INSTRUCTION_SBC_ZP_X 0xF5
#define INSTRUCTION_SBC_IND_ZP_Y 0xF1

#define INSTRUCTION_INC_A 0xEE
#define INSTRUCTION_INC_A_X 0xFE
#define INSTRUCTION_INC_ZP 0xE6
#define INSTRUCTION_INC_ZP_X 0xF6

#define INSTRUCTION_INX 0xE8
#define INSTRUCTION_INY 0xC8

#define INSTRUCTION_DEC_A 0xCE
#define INSTRUCTION_DEC_A_X 0xDE
#define INSTRUCTION_DEC_ZP 0xC6
#define INSTRUCTION_DEC_ZP_X 0xD6

#define INSTRUCTION_DEX 0xCA
#define INSTRUCTION_DEY 0x88

#define INSTRUCTION_ASL_A 0x0E
#define INSTRUCTION_ASL_A_X 0x1E
#define INSTRUCTION_ASL_REG_A 0x0A
#define INSTRUCTION_ASL_ZP 0x06
#define INSTRUCTION_ASL_ZP_X 0x16

#define INSTRUCTION_LSR_A 0x4E
#define INSTRUCTION_LSR_A_X 0x5E
#define INSTRUCTION_LSR_REG_A 0x4A
#define INSTRUCTION_LSR_ZP 0x46
#define INSTRUCTION_LSR_ZP_X 0x56

#define INSTRUCTION_ROL_A 0x2E
#define INSTRUCTION_ROL_A_X 0x3E
#define INSTRUCTION_ROL_REG_A 0x2A
#define INSTRUCTION_ROL_ZP 0x26
#define INSTRUCTION_ROL_ZP_X 0x36

#define INSTRUCTION_ROR_A 0x6E
#define INSTRUCTION_ROR_A_X 0x7E
#define INSTRUCTION_ROR_REG_A 0x6A
#define INSTRUCTION_ROR_ZP 0x66
#define INSTRUCTION_ROR_ZP_X 0x76

#define INSTRUCTION_AND_A 0x2D
#define INSTRUCTION_AND_A_X 0x3D
#define INSTRUCTION_AND_A_Y 0x39
#define INSTRUCTION_AND_IMM 0x29
#define INSTRUCTION_AND_ZP 0x25
#define INSTRUCTION_AND_IND_ZP_X 0x21
#define INSTRUCTION_AND_ZP_X 0x35
#define INSTRUCTION_AND_IND_ZP_Y 0x31

#define INSTRUCTION_ORA_A 0x0D
#define INSTRUCTION_ORA_A_X 0x1D
#define INSTRUCTION_ORA_A_Y 0x19
#define INSTRUCTION_ORA_IMM 0x09
#define INSTRUCTION_ORA_ZP 0x05
#define INSTRUCTION_ORA_IND_ZP_X 0x01
#define INSTRUCTION_ORA_ZP_X 0x15
#define INSTRUCTION_ORA_IND_ZP_Y 0x11

#define INSTRUCTION_EOR_A 0x4D
#define INSTRUCTION_EOR_A_X 0x5D
#define INSTRUCTION_EOR_A_Y 0x59
#define INSTRUCTION_EOR_IMM 0x49
#define INSTRUCTION_EOR_ZP 0x45
#define INSTRUCTION_EOR_IND_ZP_X 0x41
#define INSTRUCTION_EOR_ZP_X 0x55
#define INSTRUCTION_EOR_IND_ZP_Y 0x51

#define INSTRUCTION_CMP_A 0xCD
#define INSTRUCTION_CMP_A_X 0xDD
#define INSTRUCTION_CMP_A_Y 0xD9
#define INSTRUCTION_CMP_IMM 0xC9
#define INSTRUCTION_CMP_ZP 0xC5
#define INSTRUCTION_CMP_IND_ZP_X 0xC1
#define INSTRUCTION_CMP_ZP_X 0xD5
#define INSTRUCTION_CMP_IND_ZP_Y 0xD1

#define INSTRUCTION_CPX_A 0xEC
#define INSTRUCTION_CPX_IMM 0xE0
#define INSTRUCTION_CPX_ZP 0xE4

#define INSTRUCTION_CPY_A 0xCC
#define INSTRUCTION_CPY_IMM 0xC0
#define INSTRUCTION_CPY_ZP 0xC4

#define INSTRUCTION_BIT_A 0x2C
#define INSTRUCTION_BIT_IMM 0x89
#define INSTRUCTION_BIT_ZP 0x24

#define INSTRUCTION_BCC_R 0x90
#define INSTRUCTION_BCS_R 0xB0
#define INSTRUCTION_BNE_R 0xD0
#define INSTRUCTION_BEQ_R 0xF0
#define INSTRUCTION_BPL_R 0x10
#define INSTRUCTION_BMI_R 0x30
#define INSTRUCTION_BVC_R 0x50
#define INSTRUCTION_BVS_R 0x70

#define INSTRUCTION_TAX 0xAA
#define INSTRUCTION_TXA 0x8A
#define INSTRUCTION_TAY 0xA8
#define INSTRUCTION_TYA 0x98
#define INSTRUCTION_TSX 0xBA
#define INSTRUCTION_TXS 0x9A

#define INSTRUCTION_PHA 0x48
#define INSTRUCTION_PLA 0x68
#define INSTRUCTION_PHP 0x08
#define INSTRUCTION_PLP 0x28

#define INSTRUCTION_JMP_A 0x4C
#define INSTRUCTION_JMP_IND_A 0x6C

#define INSTRUCTION_JSR_A 0x20

#define INSTRUCTION_RTS 0x60
#define INSTRUCTION_RTI 0x40

#define INSTRUCTION_CLC 0x18
#define INSTRUCTION_SEC 0x38
#define INSTRUCTION_CLD 0xD8
#define INSTRUCTION_SED 0xF8
#define INSTRUCTION_CLI 0x58
#define INSTRUCTION_SEI 0x78
#define INSTRUCTION_CLV 0xB8

#define INSTRUCTION_BRK 0x00
#define INSTRUCTION_NOP 0xEA

extern cpu_instruction_t instructions[0xFF];

void load_instructions();

#endif